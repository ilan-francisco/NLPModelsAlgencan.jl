var documenterSearchIndex = {"docs":
[{"location":"first_steps/#First-steps","page":"First steps","title":"First steps","text":"","category":"section"},{"location":"first_steps/#Using-[NLPModels](https://github.com/JuliaSmoothOptimizers/NLPModels.jl)-standard-modeling-interface","page":"First steps","title":"Using NLPModels standard modeling interface","text":"","category":"section"},{"location":"first_steps/#Using-[JuMP](https://jump.dev/JuMP.jl/stable/)-modeling-interface","page":"First steps","title":"Using JuMP modeling interface","text":"","category":"section"},{"location":"examples/#Examples-of-usage","page":"Examples of usage","title":"Examples of usage","text":"","category":"section"},{"location":"#NLPModelsAlgencan.jl-documentation","page":"Home","title":"NLPModelsAlgencan.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"NLPModelsAlgencan.jl is a NLPModels interface to the Algencan nonlinear solver.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Algencan is a large scale high performance augmented Lagrangian solver written by Ernesto Birgin and Mario MartÃ­nez. It has many special features like being able to use the HSL library to speed up the sparse matrix linear algebra and some smart acceleration strategies.","category":"page"},{"location":"#Status","page":"Home","title":"Status","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"At this point this is alpha software. It will only work only with Julia 1.0 or later.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We have not registered the NLPModelsAlgencan.jl package yet. Hence, to add it you will need to give the full URL to the github directory. See examples below.","category":"page"},{"location":"","page":"Home","title":"Home","text":"There are three main modes of installation, depending on how you want to compile Algencan.","category":"page"},{"location":"#The-preferred-way:-using-HSL","page":"Home","title":"The preferred way: using HSL","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Obs: We only give support for MA57 at this point.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The preferred way to use Algencan is to link it against an HSL function to solve sparse linear systems. To do this you need to grab your copy of MA57 from HSL. It has a free academic license. You should receive a file named hsl_ma57-5.2.0.tar.gz.","category":"page"},{"location":"","page":"Home","title":"Home","text":"All you need to do is to create an environment variable named MA57_SOURCE pointing to this file before installing NLPModelsAlgencan.jl. For example, if the file is located at the /tmp folder, in bash you would do:","category":"page"},{"location":"","page":"Home","title":"Home","text":"export MA57_SOURCE=/tmp/hsl_ma57-5.2.0.tar.gz","category":"page"},{"location":"","page":"Home","title":"Home","text":"After that just install NLPModelsAlgencan.jl from Julia's REPL and import it to force pre-compilation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(@v1.x) pkg> add https://github.com/pjssilva/NLPModelsAlgencan.jl\njulia> using NLPModelsAlgencan","category":"page"},{"location":"#The-easy-way","page":"Home","title":"The easy way","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Just type","category":"page"},{"location":"","page":"Home","title":"Home","text":"(@v1.x) pkg> add https://github.com/pjssilva/NLPModelsAlgencan.jl\njulia> using NLPModelsAlgencan","category":"page"},{"location":"","page":"Home","title":"Home","text":"in package mode in Julia's REPL.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This will download Algencan's code, compile it and make it available to the NLPModelsAlgencan.jl package. However, there is a major caveat here. The Algencan solver will be compiled without any HSL support. This will have a major negative impact on its behavior and performance. You should use HSL whenever you have access to it.","category":"page"},{"location":"#Precompiled-libalgencan.so","page":"Home","title":"Precompiled libalgencan.so","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have your own copy of libalgencan.so (note that you need a shared library), you can use it. Just create an environment variable like below pointing to the directory where the library find resides before installing NLPModelsAlgencan.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"export ALGENCAN_LIB_DIR=/path/where/algencan/libray/is","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can then proceed to install NLPModelsAlgencan.jl from the REPL","category":"page"},{"location":"","page":"Home","title":"Home","text":"(@v1.x) pkg> add https://github.com/pjssilva/NLPModelsAlgencan.jl\njulia> using NLPModelsAlgencan","category":"page"},{"location":"#Hints-to-self-compilation-of-Algencan-with-HSL-libraries","page":"Home","title":"Hints to self compilation of Algencan with HSL libraries","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This wiki page documents the steps I used to compile a version of libalgencan.so with HSL support.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"See Examples of usage.","category":"page"},{"location":"parameters/#Optional-parameters","page":"Optional parameters","title":"Optional parameters","text":"","category":"section"}]
}
